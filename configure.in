dnl Process this file with autoconf to produce a configure script. 
AC_REVISION($Id$)
# -*- shell-script -*-

# Copyright (C) 1999, 2000, 2001 by Martin Pool <mbp@samba.org>

AC_INIT(trace.c)

my_version=0.6.0dev
my_package=libhsync
my_url=http://linuxcare.com.au/rproxy/
echo "Configuring $my_package $my_version   ($my_url)"
AM_INIT_AUTOMAKE($my_package, $my_version)

AM_DISABLE_SHARED
AM_PROG_LIBTOOL

AM_CONFIG_HEADER(config.h)

# Set up to get as many features as we can manage
AC_DEFINE(_FILE_OFFSET_BITS, 64)
AC_DEFINE(_GNU_SOURCE)

AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_ISC_POSIX
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB

AC_TYPE_SIZE_T
AC_TYPE_OFF_T

AC_C_CONST

# See if the compiler has the nice GNU feature of 
# putting argv[0] into a global
AC_MSG_CHECKING([for program_invocation_short_name])
AC_TRY_COMPILE([#include <errno.h>], 
    [strlen(program_invocation_short_name)],
    [ AC_DEFINE(HAVE_PROGRAM_INVOCATION_NAME)
      AC_MSG_RESULT(yes) ],
    [ AC_MSG_RESULT(no) ])

# On us4 SGI IRIX64, the linker reports
# ld32: WARNING 84 : /usr/lib32/libnsl.so is not used for resolving any symbol.

# HEY!  Do we need SGI cc to do 64-bit mode?  Does gcc only do 32bit?

# supply a snprintf if the system doesn't have one
AC_REPLACE_FUNCS(snprintf)
AC_CHECK_FUNCS(vsnprintf)

dnl Check for declarations
AC_MSG_CHECKING(for sockaddr.sin_len)
AC_EGREP_HEADER(sin_len, sys/socket.h, 
	[ AC_DEFINE(HAVE_SOCK_SIN_LEN)
          AC_MSG_RESULT(yes) ],
        [ AC_MSG_RESULT(no) ])

dnl Checks for libraries
AC_CHECK_LIB(popt, poptGetContext,,
        AC_MSG_WARN([libpopt is required to build libhsync tools]))

dnl Check configuration options
if test "$GCC" = "yes" 
then 
    # I'm fussy.
    CFLAGS="-Wall -W -Wshadow -Wundef -Wwrite-strings -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes -Wpointer-arith -Wcast-qual -Wcast-align $CFLAGS"
fi
# TODO: Similar conditions for other known compilers.  For SUNWspro, use `-v'.

AC_ARG_ENABLE(ccmalloc,
	[  --enable-ccmalloc       use ccmalloc debugger (default no)],
	[ LIBS="$LIBS -lccmalloc -ldl" ])

AC_ARG_ENABLE(trace,
        [  --disable-trace         turn off library tracing])
AC_MSG_CHECKING("whether to include trace code")
if test "$enable_trace" = "yes" -o -z "$enable_trace"
then
    AC_MSG_RESULT(yes)
    AC_DEFINE(DO_HS_TRACE)
elif test "$enable_trace" = "no"
then
    AC_MSG_RESULT(no)
else
    AC_MSG_RESULT(failed)
    AC_MSG_ERROR("--enable-trace must be set to yes or no")
fi

# TODO: Check for stdint.h.  If it's missing, try to find definitions
# of critical integer types through other means.  On Linux, we might
# find it in the kernel headers.  In general, perhaps we have to test
# the sizes of various things and find something suitable.  That said,
# this code probably overuses specific-sizes integers, and we might be
# better off just using generics that are large enough.
AC_CHECK_HEADERS(stdint.h)
AC_CHECK_SIZEOF([unsigned char], 1)
if test "$ac_cv_sizeof_unsigned_char" -ne 1
then
    AC_MSG_WARN(unsigned char seems to be $ac_cv_sizeof_unsigned_char bytes.  Expect trouble.)
fi

dnl Checks for header files.
AC_CHECK_HEADERS(sys/endian.h)
AC_HEADER_STDC
AC_CHECK_HEADER(popt.h,,AC_MSG_ERROR("libpopt and popt.h is required to build libhsync"))

# GNU library versioning: This is NOT the libhsync release number.
# Rather, it is a CURRENT:REVISION:AGE tuple describing binary
# compatibility to libtool.  It is only updated on major public
# releases where there is the possibility of binaries hanging around.

libhsync_libversion=2:0:0
AC_DEFINE_UNQUOTED(HS_LIBVERSION, "$libhsync_libversion")

AC_DEFINE_UNQUOTED(HS_CANONICAL_HOST, "$host")

AC_SUBST(libhsync_libversion)
AC_SUBST(OBJ_SAVE)
AC_SUBST(OBJ_RESTORE)
AC_SUBST(CC_SHOBJ_FLAG)
AC_SUBST(CCMALLOC_LIB)
AC_SUBST(net_libs)
AC_SUBST(LIBOBJS)
AC_SUBST(LIBTOOL_DEPS)

AC_OUTPUT([Makefile man/Makefile])
